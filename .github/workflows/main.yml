name: CI-CD
on: 
  push:
    branches: ["main"]
  workflow_dispatch:
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
    - name: Obtendo o código
      uses: actions/checkout@v4.1.5
    - name: Autenticação no Docker Hub
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build da Imagem Docker
      uses: docker/build-push-action@v5.3.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: | 
          cesarags/simple-home-page:v${{ github.run_number }} 
          cesarags/simple-home-page:latest 

  CD-Homolog:
    needs: [CI]
    uses: casoftsolutions/multiplos-ambiente/.github/workflows/deploy.yaml@main
    with:
        manifests: k8s/deployment.yaml
        images: cesarags/simple-home-page:v${{ github.run_number }}
        environment: homologacao
    secrets: inherit 

  Teste-Ambinte:
    runs-on: ubuntu-latest
    needs: [CD-Homolog]
    environment: homologacao
    steps:
    - name: Teste de Integração
      run: echo "Teste de Integraçã no ambiente ${{vars.WEB_NAMESPACE}}"

  CD-Producao:
        needs: [Teste-Ambinte]
        uses: casoftsolutions/multiplos-ambiente/.github/workflows/deploy.yaml@main
        with:
            manifests: k8s/deployment.yaml
            images: cesarags/simple-home-page:v${{ github.run_number }}
            environment: producao
        secrets: inherit 


# Essa Poc usa somente um cluster K8s, porem estou usando namespace para simular ambientes diferentes.
# Para isso, criei um namespace chamado homologacao e outro chamado producao.
# Para criar um namespace no K8s, basta executar o comando kubectl create namespace homologacao
# Para criar um namespace no K8s, basta executar o comando kubectl create namespace producao
# Para listar os namespaces, basta executar o comando kubectl get namespaces
# Para listar os pods de um namespace, basta executar o comando kubectl get pods -n homologacao


# Em um cenario do mundo real, o ideal é criar 2 cluster separados, um para homologação e outro para produção.
# Isso evita que um erro em homologação afete a produção.
